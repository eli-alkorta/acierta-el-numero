{"version":3,"sources":["constants/colors.js","components/TitleText.js","components/Header.js","components/Card.js","components/Input.js","components/BodyText.js","components/NumberContainer.js","components/MainButton.js","screens/StartGame.js","screens/GameScreen.js","screens/GameOver.js","App.js","web-build/register-service-worker.js","assets/success.png","assets/fonts/OpenSans-Regular.ttf","assets/fonts/OpenSans-Bold.ttf"],"names":["styles","StyleSheet","create","title","fontFamily","fontSize","TitleText","props","Text","style","children","headerBase","width","height","paddingTop","alignItems","justifyContent","headerIOS","borderBottomWidth","backgroundColor","borderBottomColor","headerAndroid","Colors","color","Platform","OS","Header","View","select","ios","android","card","elevation","padding","borderRadius","Card","input","marginVertical","Input","TextInput","body","BodyText","container","borderWidth","borderColor","number","NumberContainer","buttonContainer","overflow","button","paddingVertical","paddingHorizontal","buttonText","MainButton","ButtonComponent","TouchableOpacity","Version","TouchableNativeFeedback","activeOpacity","onPress","screen","flex","flexDirection","inputContainer","minWidth","maxWidth","textAlign","selectedNumber","marginTop","StartGame","useState","enteredValue","setEnteredValue","confirmed","setConfirmed","setSelectedNumber","Dimensions","get","buttonWidth","setButtonWidth","resetNumber","useEffect","updateLayout","addEventListener","removeEventListener","confirmedOutput","startGameHandler","ScrollView","KeyboardAvoidingView","behavior","keyboardVerticalOffset","TouchableWithoutFeedback","Keyboard","dismiss","blurOnSubmit","autoCapitalize","autoCorrect","keyboardType","maxLength","onChangeText","inputText","replace","value","Button","chosenNumber","parseInt","isNaN","Alert","alert","text","generateRandomBetween","min","max","exclude","Math","ceil","floor","random","renderListItem","numberOfRound","key","listItem","controls","listContainer","list","flexGrow","GameScreen","initialGuess","userChoice","currentGuess","setCurrentGuess","pastGuesses","setPastGuesses","setDeviceWidth","deviceHeight","setDeviceHeight","currentLow","useRef","currentHigh","gameOverHandler","length","nextGuessHandler","direction","current","nextNumber","curPastGuesses","bind","Ionicons","name","size","contentContainerStyle","map","guess","index","paddingBottom","imageContainer","marginBottom","marginHorizontal","highlight","image","GameOver","Image","source","require","resizeMode","NOfRounds","rightNumber","configureNewGame","fetchFonts","Font","App","userNumber","setUserNumber","guessRounds","setGuessRounds","dataLoaded","setDataLoaded","AppLoading","startAsync","onFinish","content","numberOfRounds","SafeAreaView","navigator","window","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"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","file":"static/js/app.a5c1ffe4.chunk.js","sourcesContent":["export default {\r\n  primary: '#f7287b',\r\n  secondary: '#C717fc'\r\n}","import React from 'react';\r\nimport { StyleSheet, Text} from 'react-native';\r\n\r\nconst TitleText = props => {\r\n  return (\r\n    <Text style={{ ...styles.title, ...props.style }}>{props.children}</Text>\r\n  )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontFamily: 'open-sans-bold',\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\nexport default TitleText;","import React from 'react';\r\nimport { StyleSheet, Platform, View } from 'react-native';\r\nimport Colors from '../constants/colors';\r\nimport TitleText from '../components/TitleText';\r\n\r\nconst Header = props => {\r\n  return (\r\n    <View style={{\r\n      ...styles.headerBase,\r\n      ...Platform.select({\r\n        ios: styles.headerIOS,\r\n        android: styles.headerAndroid\r\n      })\r\n    }}>\r\n      <TitleText style={styles.title}>{props.title}</TitleText>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  headerBase: {\r\n    width: '100%',\r\n    height: 90,\r\n    paddingTop: 36,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  headerIOS: {\r\n    borderBottomWidth: 1,\r\n    backgroundColor: 'white',\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  headerAndroid: {\r\n    borderBottomWidth: 0,\r\n    backgroundColor: Colors.primary,\r\n    borderBottomColor: 'transparent',\r\n  },\r\n  title: {\r\n    color: Platform.OS === 'android' ? 'white' : Colors.primary,\r\n  }\r\n});\r\n\r\nexport default Header;","import React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <View style={{...styles.card, ...props.style}}>{props.children}</View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    elevation: 8,\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 20\r\n  }\r\n});\r\n\r\nexport default Card;","import React from 'react';\r\nimport { StyleSheet, TextInput } from 'react-native';\r\n\r\nconst Input = props => {\r\n  return (\r\n    <TextInput {...props} style={{ ...styles.input, ...props.style }} />\r\n  )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    height: 30,\r\n    borderBottomColor: 'grey',\r\n    borderBottomWidth: 1,\r\n    marginVertical: 10\r\n  } \r\n});\r\n\r\nexport default Input;","import React from 'react';\r\nimport { StyleSheet, Text} from 'react-native';\r\n\r\nconst BodyText = props => {\r\n  return (\r\n    <Text style={{ ...styles.body, ...props.style }}>{props.children}</Text>\r\n  )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    fontFamily: 'open-sans'\r\n  }\r\n});\r\n\r\nexport default BodyText;","import React, {useState} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Colors from '../constants/colors';\r\nimport BodyText from './BodyText';\r\n\r\nconst NumberContainer = props => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <BodyText style={styles.number}>{props.children}</BodyText>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderWidth: 2,\r\n    borderColor: Colors.secondary,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginVertical: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  number: {\r\n    color: Colors.secondary,\r\n    fontSize: 22\r\n  } \r\n});\r\n\r\nexport default NumberContainer;","import React from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, TouchableNativeFeedback, Platform } from 'react-native';\r\nimport Colors from '../constants/colors';\r\n\r\nconst MainButton = props => {\r\n  let ButtonComponent = TouchableOpacity;\r\n\r\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\r\n    ButtonComponent = TouchableNativeFeedback;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.buttonContainer}>\r\n      <ButtonComponent activeOpacity={0.6} onPress={props.onPress}>\r\n        <View style={styles.button}>\r\n          <Text style={styles.buttonText}>{props.children}</Text>\r\n        </View>\r\n      </ButtonComponent>\r\n    </View>\r\n  )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    borderRadius: 25,\r\n    overflow: 'hidden'\r\n  },\r\n  button: {\r\n    backgroundColor: Colors.primary,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontFamily: 'open-sans',\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\nexport default MainButton;","import React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, Button, TouchableWithoutFeedback, Keyboard, Alert, Dimensions, ScrollView, KeyboardAvoidingView } from 'react-native';\r\nimport Card from '../components/Card';\r\nimport Colors from '../constants/colors';\r\nimport Input from '../components/Input';\r\nimport NumberContainer from '../components/NumberContainer';\r\nimport BodyText from '../components/BodyText';\r\nimport TitleText from '../components/TitleText';\r\nimport MainButton from '../components/MainButton';\r\n\r\nconst StartGame = props => {\r\n\r\n  const [enteredValue, setEnteredValue] = useState('');\r\n  const [confirmed, setConfirmed] = useState(false);\r\n  const [selectedNumber, setSelectedNumber] = useState('');\r\n  const [buttonWidth, setButtonWidth] = useState(Dimensions.get('window').width / 4);\r\n\r\n  const numberInputHandler = inputText => {\r\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''))\r\n  }\r\n\r\n  const resetNumber = () => {\r\n    setEnteredValue('');\r\n    setConfirmed(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const updateLayout = () => {\r\n      setButtonWidth(Dimensions.get('window').width / 4)\r\n    }\r\n  \r\n    Dimensions.addEventListener('change', updateLayout);\r\n    return () => {\r\n      Dimensions.removeEventListener('change', updateLayout);\r\n    }\r\n  });\r\n\r\n  const confirmInput = () => {\r\n    const chosenNumber = parseInt(enteredValue);\r\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\r\n      Alert.alert('Número inválido',\r\n        'debes introducir una cifra entre 1 y 99',\r\n        [{ text: 'OK', style: 'destructive', onPress: resetNumber }])\r\n      return;\r\n    }\r\n    setConfirmed(true);\r\n    setSelectedNumber(chosenNumber);\r\n    setEnteredValue('');\r\n    Keyboard.dismiss();\r\n  }\r\n\r\n  let confirmedOutput;\r\n\r\n    if (confirmed) {\r\n      confirmedOutput = <Card style={styles.selectedNumber}>\r\n        <Text>Número seleccionado: </Text>\r\n        <NumberContainer>{selectedNumber}</NumberContainer>\r\n        <MainButton onPress={() => props.startGameHandler(selectedNumber)} >\r\n          COMENZAR\r\n        </MainButton>\r\n      </Card>\r\n    }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <KeyboardAvoidingView behavior='position' keyboardVerticalOffset={30}>\r\n        <TouchableWithoutFeedback onPress={() => {\r\n          Keyboard.dismiss();\r\n        }}>\r\n          <View style={styles.screen}>\r\n            <TitleText style={styles.title}>Nueva Partida</TitleText>\r\n            <Card style={styles.inputContainer}>\r\n              <BodyText>Escoge un Número</BodyText>\r\n              <Input style={styles.input}\r\n                blurOnSubmit={true}\r\n                autoCapitalize='none'\r\n                autoCorrect={false}\r\n                keyboardType='number-pad'\r\n                maxLength={2}\r\n                onChangeText={numberInputHandler}\r\n                value={enteredValue}/>\r\n              <View style={styles.buttonContainer}>\r\n                <View style={{width: buttonWidth}}>\r\n                  <Button title=\"Reset\"\r\n                    color={Colors.secondary}\r\n                    onPress={resetNumber}/>\r\n                </View>\r\n                <View style={{width: buttonWidth}}>\r\n                  <Button title=\"Confirm\"\r\n                    color={Colors.primary}\r\n                    onPress={confirmInput}/>\r\n                </View>\r\n              </View>\r\n            </Card>\r\n              {confirmedOutput}\r\n          </View>\r\n          </TouchableWithoutFeedback>\r\n        </KeyboardAvoidingView>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    padding: 10,\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 15\r\n  },\r\n  inputContainer: {\r\n    width: '80%',\r\n    minWidth: 300,\r\n    maxWidth: '95%',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    width: 50,\r\n    textAlign: 'center'\r\n  },\r\n  title: {\r\n    marginVertical: 10\r\n  },\r\n  selectedNumber: {\r\n    marginTop: 20,\r\n    alignItems: 'center'\r\n  }\r\n})\r\n\r\nexport default StartGame;","import React, {useState, useRef, useEffect} from 'react';\r\nimport { StyleSheet, View, Alert, ScrollView, Dimensions } from 'react-native';\r\nimport NumberContainer from '../components/NumberContainer';\r\nimport Card from '../components/Card';\r\nimport BodyText from '../components/BodyText';\r\nimport MainButton from '../components/MainButton';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst generateRandomBetween = (min, max, exclude) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  const random = Math.floor(Math.random() * (max - min) + min);\r\n  if (random === exclude) {\r\n    return generateRandomBetween(min, max, exclude)\r\n  } else {\r\n    return random;\r\n  }\r\n}\r\n\r\nconst renderListItem = (value, numberOfRound) => \r\n  (<View key={value} style={styles.listItem}>\r\n    <BodyText>#{numberOfRound}</BodyText>\r\n    <BodyText>{value}</BodyText>\r\n  </View>)\r\n\r\n\r\nconst GameScreen = props => {\r\n\r\n  const initialGuess = generateRandomBetween(1, 100, props.userChoice);\r\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\r\n  const [pastGuesses, setPastGuesses] = useState([initialGuess]);\r\n  const [deviceWidth, setDeviceWidth] = useState(Dimensions.get('window').width);\r\n  const [deviceHeight, setDeviceHeight] = useState(Dimensions.get('window').height);\r\n\r\n  const currentLow = useRef(1);\r\n  const currentHigh = useRef(100);\r\n  const { userChoice, gameOverHandler } = props;\r\n\r\n  useEffect(() => {\r\n    const updateLayout = () => {\r\n      setDeviceWidth(Dimensions.get('window').width);\r\n      setDeviceHeight(Dimensions.get('window').height)\r\n    }\r\n\r\n    Dimensions.addEventListener('change', updateLayout);\r\n    return () => {\r\n      Dimensions.removeEventListener('change', updateLayout);\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (currentGuess === userChoice) {\r\n      gameOverHandler(pastGuesses.length);\r\n    }\r\n  },[currentGuess, userChoice, gameOverHandler]);\r\n\r\n  const nextGuessHandler = direction => {\r\n    if ((direction === 'lower' && currentGuess < props.userChoice) || (direction === 'greater' && currentGuess > props.userChoice)){\r\n      Alert.alert(\"Mentira!\", \"Sabes que eso no es verdad...\", [{ text: 'Oops... perdona', style: 'cancel' }]);\r\n      return;\r\n    }\r\n    if (direction === 'lower') {\r\n      currentHigh.current = currentGuess;\r\n    } else {\r\n      currentLow.current = currentGuess + 1;\r\n    }\r\n    const nextNumber = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\r\n    setCurrentGuess(nextNumber);\r\n    setPastGuesses(curPastGuesses => [nextNumber, ...curPastGuesses])\r\n  }\r\n\r\n  if (deviceHeight < 500) {\r\n    return (\r\n      <View style={styles.screen}>\r\n        <BodyText>Número estimado por el contrincante</BodyText>\r\n        <View style={styles.controls}>\r\n          <MainButton onPress={nextGuessHandler.bind(this, 'lower')}>\r\n            <Ionicons name='md-remove' size={24} color='white' />\r\n          </MainButton>\r\n          <NumberContainer>{currentGuess}</NumberContainer>\r\n          <MainButton onPress={nextGuessHandler.bind(this, 'greater')}>\r\n            <Ionicons name='md-add' size={24} color='white' />\r\n          </MainButton>  \r\n        </View>  \r\n        <View style={styles.listContainer}>\r\n          <ScrollView contentContainerStyle={styles.list}>\r\n          {pastGuesses.map((guess, index) => renderListItem(guess, pastGuesses.length - index))}\r\n          </ScrollView>\r\n        </View>\r\n    </View>\r\n    )\r\n  } else {\r\n    return (\r\n      <View style={styles.screen}>\r\n        <BodyText>Número estimado por el contrincante</BodyText>\r\n        <NumberContainer>{currentGuess}</NumberContainer>\r\n        <Card style={styles.buttonContainer}>\r\n          <MainButton onPress={nextGuessHandler.bind(this, 'lower')}>\r\n            <Ionicons name='md-remove' size={24} color='white' />\r\n          </MainButton>\r\n          <MainButton onPress={nextGuessHandler.bind(this, 'greater')}>\r\n            <Ionicons name='md-add' size={24} color='white' />\r\n          </MainButton>     \r\n        </Card>\r\n          <View style={styles.listContainer}>\r\n            <ScrollView contentContainerStyle={styles.list}>\r\n            {pastGuesses.map((guess, index) => renderListItem(guess, pastGuesses.length - index))}\r\n            </ScrollView>\r\n          </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    padding: 10,\r\n    alignItems: 'center'\r\n  },\r\n  controls: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    width: '80%',\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: Dimensions.get('window').height > 600 ? 20 : 10,\r\n    width: 300,\r\n    maxWidth: '80%'\r\n  },\r\n  listContainer: {\r\n    width: Dimensions.get('window').width > 350 ? '70%' : '80%',\r\n    flex: 1\r\n  },\r\n  list: {\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  listItem: {\r\n    borderColor: '#ccc',\r\n    borderWidth: 1,\r\n    padding: 15,\r\n    marginVertical: 10,\r\n    backgroundColor: 'white',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '60%'\r\n  }\r\n});\r\n\r\nexport default GameScreen;","import React from 'react';\r\nimport { StyleSheet, Image, View, Text, Dimensions, ScrollView } from 'react-native';\r\nimport BodyText from '../components/BodyText';\r\nimport TitleText from '../components/TitleText';\r\nimport Colors from '../constants/colors';\r\nimport MainButton from '../components/MainButton';\r\n\r\nconst GameOver = props => {\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.screen}>\r\n        <TitleText style={styles.title}>¡Has acertado!</TitleText>\r\n        <View style={styles.imageContainer}>\r\n          <Image source={require('../assets/success.png')}\r\n            style={styles.image}\r\n            resizeMode='cover' />\r\n        </View>\r\n        <BodyText style={styles.text}>Tu teléfono ha necesitado <Text style={styles.highlight}>{props.NOfRounds}</Text> rondas para adivinar el número <Text style={styles.highlight}>{props.rightNumber}</Text></BodyText>\r\n        <MainButton onPress={props.configureNewGame}>NUEVA PARTIDA</MainButton>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 20\r\n  },\r\n  title: {\r\n    marginTop: 20\r\n  },\r\n  imageContainer: {\r\n    borderRadius: Dimensions.get('window').width * 0.7 / 2,\r\n    borderWidth: 3,\r\n    borderColor: 'black',\r\n    width: Dimensions.get('window').width * 0.7,\r\n    height: Dimensions.get('window').width * 0.7,\r\n    overflow: 'hidden',\r\n    marginVertical: Dimensions.get('window').height / 30\r\n  },\r\n  text: {\r\n    fontSize: Dimensions.get('window').width < 350 ? 16 : 20,\r\n    marginBottom: Dimensions.get('window').height / 30,\r\n    marginHorizontal: 30,\r\n    textAlign: 'center'\r\n  },\r\n  highlight: {\r\n    color: Colors.primary,\r\n    fontFamily: 'open-sans-bold'\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n});\r\n\r\nexport default GameOver;","import React, {useState} from 'react';\nimport { StyleSheet, View, SafeAreaView } from 'react-native';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Header from './components/Header';\nimport StartGame from './screens/StartGame';\nimport GameScreen from './screens/GameScreen';\nimport GameOver from './screens/GameOver';\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    'open-sans': require('./assets/fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf')\n  })\n}\n\nexport default function App() {\n\n  const [userNumber, setUserNumber] = useState();\n  const [guessRounds, setGuessRounds] = useState(0);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  if (!dataLoaded) {\n    return <AppLoading startAsync={fetchFonts}\n                       onFinish={() => setDataLoaded(true)} />;\n  }\n\n  const configureNewGame = () => {\n    setGuessRounds(0);\n    setUserNumber(null);\n  }\n\n  const startGameHandler = (selectedNumber) => {\n    setUserNumber(selectedNumber);\n  }\n\n  const gameOverHandler = numberOfRounds => {\n    setGuessRounds(numberOfRounds);\n  }\n\n  let content = <StartGame startGameHandler={startGameHandler}/>\n\n  if (userNumber && guessRounds <= 0) {\n    content = <GameScreen userChoice={userNumber}\n                          gameOverHandler={gameOverHandler} />\n  } else if (guessRounds > 0) {\n    content = <GameOver NOfRounds={guessRounds}\n                        rightNumber={userNumber}\n                        configureNewGame={configureNewGame} />\n  }\n\n  return (\n    <SafeAreaView style={styles.screen}>\n      <Header title=\"Adivina el número\" />\n      {content}    \n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/eli-alkorta/acierta-el-numero.git/expo-service-worker.js', { scope: '/eli-alkorta/acierta-el-numero.git/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/success.79c27343.png\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Bold.ttf\";"],"sourceRoot":""}